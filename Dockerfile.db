FROM postgres:latest

ENV POSTGRES_USER=dhg503
ENV POSTGRES_PASSWORD=dhg503dhg503
ENV POSTGRES_DB=dhg503
RUN apt-get update && apt-get install -y curl gzip dos2unix && \
    rm -rf /var/lib/apt/lists/*

RUN echo "Downloading backup..." && \
    curl -f -L -o /tmp/pg_backup.sql.gz https://r2.dh-choi.com/pg_backup.sql.gz && \
    echo "Decompressing backup..." && \
    gunzip /tmp/pg_backup.sql.gz && \
    echo "Moving backup to initdb directory..." && \
    mv /tmp/pg_backup.sql /docker-entrypoint-initdb.d/pg_backup.sql && \
    echo "Applying dos2unix to initdb script..." && \
    dos2unix /docker-entrypoint-initdb.d/pg_backup.sql && \
    echo "Copying backup to /scripts..." && \
    mkdir -p /scripts && \
    cp /docker-entrypoint-initdb.d/pg_backup.sql /scripts/pg_backup.sql && \
    echo "Applying dos2unix and chmod to /scripts/pg_backup.sql..." && \
    dos2unix /scripts/pg_backup.sql && \
    chmod 755 /scripts/pg_backup.sql && \
    chmod 755 /scripts && \
    echo "Setup complete."

# Add a script to create mytable
RUN echo "CREATE TABLE IF NOT EXISTS mytable (id SERIAL PRIMARY KEY, name TEXT, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);" > /docker-entrypoint-initdb.d/create_mytable.sql

# Add a test entry to mytable
RUN echo "INSERT INTO mytable (title, date, content) VALUES ('Test Entry', '2025-01-01', 'This is a test entry.');" >> /docker-entrypoint-initdb.d/create_mytable.sql

CMD ["postgres"]